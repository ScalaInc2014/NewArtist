{"filter":false,"title":"server.js","tooltip":"/server.js","undoManager":{"mark":34,"position":34,"stack":[[{"group":"doc","deltas":[{"start":{"row":64,"column":59},"end":{"row":64,"column":60},"action":"remove","lines":[")"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":58},"end":{"row":64,"column":59},"action":"remove","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":57},"end":{"row":64,"column":58},"action":"remove","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":56},"end":{"row":64,"column":57},"action":"remove","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":55},"end":{"row":64,"column":56},"action":"remove","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":54},"end":{"row":64,"column":55},"action":"remove","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":53},"end":{"row":64,"column":54},"action":"remove","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":52},"end":{"row":64,"column":53},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":51},"end":{"row":64,"column":52},"action":"remove","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":50},"end":{"row":64,"column":52},"action":"remove","lines":["()"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":50},"end":{"row":64,"column":51},"action":"insert","lines":[")"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":50},"end":{"row":64,"column":52},"action":"insert","lines":["()"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":51},"end":{"row":64,"column":52},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":52},"end":{"row":64,"column":53},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":53},"end":{"row":64,"column":54},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":54},"end":{"row":64,"column":55},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":55},"end":{"row":64,"column":56},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":56},"end":{"row":64,"column":57},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":57},"end":{"row":64,"column":58},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":58},"end":{"row":64,"column":59},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":58},"end":{"row":64,"column":59},"action":"remove","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":57},"end":{"row":64,"column":58},"action":"remove","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":56},"end":{"row":64,"column":57},"action":"remove","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":55},"end":{"row":64,"column":56},"action":"remove","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":54},"end":{"row":64,"column":55},"action":"remove","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":53},"end":{"row":64,"column":54},"action":"remove","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":52},"end":{"row":64,"column":53},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":51},"end":{"row":64,"column":52},"action":"remove","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":71,"column":3},"action":"remove","lines":["// -------------- Npm and node dependencies ---------------------------//","var bodyParser = require('body-parser'); // Middleware to parse different data formats","var express = require(\"express\");","var cookieParser = require(\"cookie-parser\"); // Middleware to parse Cookie and populate req.cookies.","var session = require(\"express-session\"); // Sets up an HTTP session for a user and provides a persistent req.session object in between requests. Depends on cookieParser.","var MongoStore = require('connect-mongo')(session); // ","var flash = require(\"connect-flash\");  // Middleware used for storing messages in req-","var passport = require(\"passport\");","var path = require(\"path\");","var server = express();","var engines = require(\"consolidate\"); // Normalize Template's Render Functions  ","","","","//---------------- Serve Static Files -----------------///////////////","","server.use(express.static(path.join(__dirname, 'public'))); // Called before authenticationRoutes, in order to prevent the router handles /public/bootstrap","","//-------------- Local dependencies -----------------------------------//","var setPassportConfigurations = require('./Authentication/Passport/init');","var authenticationRoutes = require('./routes');","","","/* View´s Directory and Views Engine Configuration*/","var viewEngineName = 'dust';","server.engine(viewEngineName , engines.dust);","server.set('view engine', viewEngineName);","server.set('views', __dirname + '/views');","","","// The middleware is used to parse the url encoded","server.use(cookieParser()); // Signed Cookies in order to work with Express.session","server.use(bodyParser.urlencoded({ extended : true }));   ","","// Session Options","","var sessionOpts = {"," \t"," \t\tsecret: 'keyboard cat',","\t \tstore: new MongoStore({ db: 'NewArtist'}),","\t \tkey: 'NewArtist_sid',","\t    cookie: { ","\t    \t// expires: new Date(Date.now() + 60000),","\t        // maxAge: new Date(Date.now() + 60000) ","\t    }","};","","server.use(session(sessionOpts)); ","server.use(flash());","server.use(passport.initialize()); ","server.use(passport.session()); //persistent login session","","// Strategies and configurations are set up","setPassportConfigurations(passport);","","///** ROUTES***///","","//Home Page","server.get('/', function(req, res) {","    // Display the Login page with any flash message, if any","\tres.locals.session = req.user;","\tres.render('index.dust', {title:'NEWARTIST'});","});","","server.use('/authentication', authenticationRoutes());","","///** ROUTES ****///","","","server.listen(8080, function(){","\tconsole.log(\"NewArtist running in port 8080\");","});"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":74,"column":3},"action":"insert","lines":["// -------------- Npm and node dependencies ---------------------------//","var bodyParser = require('body-parser'); // Middleware to parse different data formats","var express = require(\"express\");","var cookieParser = require(\"cookie-parser\"); // Middleware to parse Cookie and populate req.cookies.","var session = require(\"express-session\"); // Sets up an HTTP session for a user and provides a persistent req.session object in between requests. Depends on cookieParser.","var MongoStore = require('connect-mongo')(session); // ","var flash = require(\"connect-flash\");  // Middleware used for storing messages in req-","var passport = require(\"passport\");","var path = require(\"path\");","var server = express();","var engines = require(\"consolidate\"); // Normalize Template's Render Functions  ","","","","//---------------- Serve Static Files -----------------///////////////","","server.use(express.static(path.join(__dirname, 'public'))); // Called before authenticationRoutes, in order to prevent the router handles /public/bootstrap","","//-------------- Local dependencies -----------------------------------//","var setPassportConfigurations = require('./Authentication/Passport/init');","","","/* View´s Directory and Views Engine Configuration*/","var viewEngineName = 'dust';","server.engine(viewEngineName , engines.dust);","server.set('view engine', viewEngineName);","server.set('views', __dirname + '/views');","","","// The middleware is used to parse the url encoded","server.use(cookieParser()); // Signed Cookies in order to work with Express.session","server.use(bodyParser.urlencoded({ extended : true }));   ","","// Session Options","","var sessionOpts = {"," \t"," \t\tsecret: 'keyboard cat',","\t \tstore: new MongoStore({ db: 'NewArtist'}),","\t \tkey: 'NewArtist_sid',","\t    cookie: { ","\t    \t// expires: new Date(Date.now() + 60000),","\t        // maxAge: new Date(Date.now() + 60000) ","\t    }","};","","server.use(session(sessionOpts)); ","server.use(flash());","server.use(passport.initialize()); ","server.use(passport.session()); //persistent login session","","// Strategies and configurations are set up","setPassportConfigurations(passport);","","///** ROUTES***///","","//Home Page","server.get('/', function(req, res) {","    // Display the Login page with any flash message, if any","\tres.locals.session = req.user;","\tres.render('index.dust', {title:'NEWARTIST'});","});","","var routes = require('./routes')(server);","","// server.use('/authentication/signin',routes.signin());","// server.use('/authentication/signup',routes.signup());","// server.use('/authentication/signout',routes.signout());","","","///** ROUTES ****///","","server.listen(8080, function(){","\tconsole.log(\"NewArtist running in port 8080\");","});"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":0},"end":{"row":67,"column":58},"action":"remove","lines":["","// server.use('/authentication/signin',routes.signin());","// server.use('/authentication/signup',routes.signup());","// server.use('/authentication/signout',routes.signout());"]}]}],[{"group":"doc","deltas":[{"start":{"row":65,"column":0},"end":{"row":66,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":0},"end":{"row":65,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":63,"column":24},"end":{"row":63,"column":25},"action":"remove","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":63,"column":24},"end":{"row":63,"column":25},"action":"insert","lines":["R"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":62,"column":0},"end":{"row":62,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1430429565000,"hash":"61b3b53b3e7dddad0b285307525a03ebf675e2a1"}